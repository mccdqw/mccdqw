Users: Students, Teaching Assistants, Professors
Student User Requirements:
•	Be able to submit assignment based on due date
•	Receive reminders for deadlines of assignments
•	Have calendar of different assignment checkpoints/due dates
•	Confirmation saying the student submitted the assignment
Teaching Assistant Requirements:
•	Have organizational folders for each assignment 
•	Each assignment is categorized by name or some type of ID
•	Communication channel that lets students interact with TA’s if there are any submission issues
•	List of people that have not turned in the assignment yet
•	Be able to convert different types of files to a common file type that can read and grade for plagiarism 
Professor Requirements:
•	Keep organizational record of different sections and their corresponding TA/students 
•	Release the assignments and the requirements to TA/students along with how it will be graded
•	Be able to manage the grading done by the TA and override the grade if need be
•	Have system send an alert to student from professor if grade is lower than a certain threshold that is set by the professor
User Activities:
1.	(Student: name, pawprint), (Assignment: assignment ID, rubric, due date)
a.	Privacy of student information/submission
b.	Records of unsuccessful attempts of submitting assignment
2.	(Reminder: message, time delivered)
a.	How long it takes to send the reminder
3.	(Calendar: dates, due dates/checkpoints for each assignment)
a.	Only professors have access to update the calendar
b.	Same calendar available to every student
4.	(Confirmation: message, time delivered)
a.	Make sure everyone in the system gets the confirmation
Teaching Assistant Activities:
1.	(Folder: assignment ID, student name, pawprint)
a.	Security of folder
b.	Hold enough data for assignment sizes
2.	(Assignment: assignment ID, rubric, due date)
a.	Being able to scale the organization to multiple assignments
3.	(Communication Channel: TA ID, student name, pawprint, message)
a.	Make sure students/TA are not using any foul language
b.	Quick response time
c.	Regulate messages
4.	(List: student name, pawprint, date, assignment ID)
a.	Scalability of list
b.	Have list available 
5.	(File Converter: file type, converted file type, assignment ID, plagiarism check)
a.	Convert at a fast rate
b.	Converter must be able to scale based on the size of the file
c.	Regulate the plagiarism check to make sure it doesn’t make mistakes
Professor Activities:
1.	(Class: section ID, class ID, TA ID, professor ID student names, pawprint)
a.	Maintain classes and make sure IDs are in right place
2.	(Assignments: assignment ID, rubric, due date)
a.	Release assignment in appropriate time
3.	(Grade Manager: grade, override code, TA ID, professor ID)
a.	Security of grades
b.	Override code needs to be maintained in an appropriate manner, so it is not obtained by any TA or student
4.	(Alert: student name, pawprint, professor ID, grade, threshold) 
a.	Keep threshold secure in system
b.	Make sure students and TA are fully aware of any alerts that are received
System Requirements:
•	Server that can hold necessary data and programs
•	Database that can hold the entities and their attributes/relationships
•	Memory for enough storage
•	Network used for interactions
•	Appropriate internet connection
•	Operating system that is the most up to date with its usage
